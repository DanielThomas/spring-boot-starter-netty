/*
 * Copyright 2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply plugin: 'jacoco'

apply from: 'gradle/integTest.gradle'
apply from: 'gradle/benchmark.gradle'

task('checkSourceFiles') << {
    def sourceSet = sourceSets.main.java
    for (File srcDir : sourceSet.srcDirs) {
        def tree = fileTree(srcDir).matching(sourceSet.filter)
        def packageDirs = new TreeSet<File>()
        tree.visit { details ->
            if (!details.isDirectory()) {
                packageDirs.add(details.getFile().getParentFile())
            }
        }
        for (File packageDir : packageDirs) {
            def packageInfoFile = new File(packageDir, 'package-info.java')
            assert packageInfoFile.exists(): packageInfoFile.absolutePath + ' is missing. All packages must have a package-info file'

            def sanityTestFile = new File(packageDir.absolutePath.replace('\\', '/').replace('src/main/java', 'src/test/groovy'), 'PackageSanityTest.groovy')
            assert sanityTestFile.exists(): sanityTestFile.absolutePath + ' is missing. All packages must have a Guava package sanity check'
        }
    }
}
compileJava.dependsOn checkSourceFiles
