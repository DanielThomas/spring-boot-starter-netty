/*
 * Copyright 2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

ext {
  libraries = [:]
  versions = [:]
}

versions.guava = '17.0'
versions.spock = '0.7-groovy-2.0'
versions.springboot = '1.1.5.RELEASE'

configurations.all {
  resolutionStrategy {
    eachDependency { details ->
      switch (details.requested.name) {
        case 'junit':
        case 'junit-dep':
          details.useTarget 'junit:junit:4.11'
          break
        case 'log4j':
          details.useTarget "org.slf4j:log4j-over-slf4j:$versions.slf4j"
          break
        case 'commons-logging':
          details.useTarget "org.slf4j:jcl-over-slf4j:$versions.slf4j"
          break
        case 'groovy-all':
          details.useVersion '2.2.2'
          break
      }
      if(details.requested.group == 'org.apache.tomcat.embed') {
        details.useVersion '8.0.9'
      }
    }
    def isCiServer = System.getenv().containsKey('HUDSON_HOME')
    if (isCiServer) {
      cacheChangingModulesFor 0, 'seconds'
    }
  }
}


libraries.guava = [
    "com.google.guava:guava:$versions.guava",
    'com.google.code.findbugs:jsr305:3.0.0'
]
libraries.netty = [
    'io.netty:netty-all:4.1.0.Beta1',
    'org.javassist:javassist:3.18.2-GA',
    'com.jcraft:jzlib:1.1.3'
]
libraries.servletapi = 'javax.servlet:javax.servlet-api:3.1.0'

libraries.springboot = [
    dependencies.create("org.springframework.boot:spring-boot-starter-web:$versions.springboot") {
       exclude module: 'spring-boot-starter-tomcat'
    }
]

libraries.guavatest = "com.google.guava:guava-testlib:$versions.guava"
libraries.spock = [
    "org.spockframework:spock-core:$versions.spock",
    'cglib:cglib-nodep:3.1',
    'org.objenesis:objenesis:2.1'
]

libraries.testlibs = [
    libraries.guavatest,
    libraries.spock
]
